Microchip MPLAB XC8 Compiler V1.31 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.31\dat\en_msgs.txt -cs \
  -h+dist/default/production\firmware.production.sym \
  --cmf=dist/default/production\firmware.production.cmf -z -Q18LF13K22 \
  -oC:\Users\JONPET~1\AppData\Local\Temp\s4hk.6 \
  -Mdist/default/production/firmware.production.map -E1 -ver=XC8 \
  -ASTACK=0B0h-0ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0100h-01FFhx31 -AMEDIUMCONST=0100h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-0FFh -ABIGRAM=01h-0FFh -ARAM=060h-0FFh -ABANK0=060h-0FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0100h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE \
  C:\Users\JONPET~1\AppData\Local\Temp\s4hk.obj \
  dist/default/production\firmware.production.obj 

Object code version is 3.11

Machine type is 18LF13K22

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\JONPET~1\AppData\Local\Temp\s4hk.obj
                end_init                             C8       C8        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\firmware.production.obj
                intcode                               8        8       C0        4       0
                smallconst                          100      100       16       80       0
                text16                              B78      B78       20       8B       0
                text15                              B30      B30       26       8B       0
                text14                              BD2      BD2       16       8B       0
                text13                              BE8      BE8        E       8B       0
                text12                              AE2      AE2       28       8B       0
                text11                              B56      B56       22       8B       0
                text10                              B0A      B0A       26       8B       0
                text9                               91C      91C       86       8B       0
                text8                               9A2      9A2       82       8B       0
                text7                               BB6      BB6       1C       8B       0
                text6                               72C      72C      108       8B       0
                text5                               834      834       E8       8B       0
                text4                               A24      A24       56       8B       0
                text3                               A7A      A7A       3E       8B       0
                text2                               5EE      5EE      13E       8B       0
                text1                               AB8      AB8       2A       8B       0
                text0                               116      116      4D8       8B       0
                cstackCOMRAM                          1        1       42        1       1
                cstackBANK0                          A0       A0       10       60       1
                bssBANK0                             60       60       40       60       1
                bssCOMRAM                            43       43        4        1       1
                cinit                               B98      B98       1E       8B       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             C8       C8        4         0
                intcode                               8        8       C0         0
                reset_vec                             0        0        4         0
                text16                              B78      B78       20         0
                text15                              B30      B30       26         0
                text14                              BD2      BD2       16         0
                text13                              BE8      BE8        E         0
                text12                              AE2      AE2       28         0
                text11                              B56      B56       22         0
                text10                              B0A      B0A       26         0
                text9                               91C      91C       86         0
                text8                               9A2      9A2       82         0
                text7                               BB6      BB6       1C         0
                text6                               72C      72C      108         0
                text5                               834      834       E8         0
                text4                               A24      A24       56         0
                text3                               A7A      A7A       3E         0
                text2                               5EE      5EE      13E         0
                text1                               AB8      AB8       2A         0
                text0                               116      116      4D8         0
                cinit                               B98      B98       1E         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          100      100       16         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       42         1
                bssCOMRAM                            43       43        4         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          A0       A0       10         1
                bssBANK0                             60       60       40         1

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000046  000047         1       1  COMRAM  
                intcode                        000008  0000C4  0000CC         4       0  CODE    
                bssBANK0                       000060  000050  0000B0        60       1  BANK0   
                smallconst                     000100  000016  000116        80       0  SMALLCON
                text0                          000116  000AE0  000BF6        8B       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000B0-0000FF               50
        BIGRAM           000047-00005F               19
                         0000B0-0000FF               50
        CODE             000004-000007                4
                         0000CC-0000FF               34
                         000BF6-001FFF             140A
        COMRAM           000047-00005F               19
        CONST            000004-000007                4
                         0000CC-0000FF               34
                         000BF6-001FFF             140A
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000BF6-001FFF             140A
        RAM              0000B0-0000FF               50
        SFR              000F60-000FFF               A0
        SMALLCONST       000BF6-001FFF              100
        STACK            0000B0-0000FF               50

                                  Symbol Table

?___aldiv                cstackCOMRAM 00000F
?___almod                cstackCOMRAM 00000F
?___lldiv                cstackCOMRAM 000020
?___lmul                 cstackCOMRAM 000014
?_ad_read                cstackCOMRAM 00000F
_ADCON0                  (abs)        000FC2
_ADCON0bits              (abs)        000FC2
_ADCON1bits              (abs)        000FC1
_ADCON2                  (abs)        000FC0
_ADRESH                  (abs)        000FC4
_ADRESL                  (abs)        000FC3
_ANSEL                   (abs)        000F7E
_ANSELH                  (abs)        000F7F
_CCP1CONbits             (abs)        000FBD
_CCPR1L                  (abs)        000FBE
_INTCONbits              (abs)        000FF2
_LATCbits                (abs)        000F8B
_OSCCON                  (abs)        000FD3
_OSCTUNEbits             (abs)        000F9B
_PIE1bits                (abs)        000F9D
_PIR1bits                (abs)        000F9E
_PR2                     (abs)        000FCB
_PWM1CON                 (abs)        000FB7
_RCREG                   (abs)        000FAE
_RCSTAbits               (abs)        000FAB
_SPBRG                   (abs)        000FAF
_T2CONbits               (abs)        000FCA
_TRISA                   (abs)        000F92
_TRISB                   (abs)        000F93
_TRISC                   (abs)        000F94
_TXIE                    (abs)        007CEC
_TXREG                   (abs)        000FAD
_TXSTAbits               (abs)        000FAC
_VREFCON0                (abs)        000FBA
_WDTCON                  (abs)        000FD1
__CFG_BOREN$SBORDIS      (abs)        000000
__CFG_BORV$19            (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_FOSC$IRC           (abs)        000000
__CFG_HFOFST$OFF         (abs)        000000
__CFG_IESO$OFF           (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$OFF          (abs)        000000
__CFG_PCLKEN$ON          (abs)        000000
__CFG_PLLEN$OFF          (abs)        000000
__CFG_WDTEN$OFF          (abs)        000000
__CFG_WDTPS$32           (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssBANK0              bssBANK0     000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackBANK0           cstackBANK0  000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hend_init              end_init     0000CC
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         0000C8
__Hintcode               intcode      0000C8
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    0000C8
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      0000C8
__Hram                   ram          000000
__Hramtop                ramtop       000100
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000004
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000116
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext15                text15       000000
__Htext16                text16       000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssBANK0              bssBANK0     000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackBANK0           cstackBANK0  000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lend_init              end_init     0000C8
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         0000C8
__Lintcode               intcode      000008
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    0000C8
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      0000C8
__Lram                   ram          000000
__Lramtop                ramtop       000100
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000100
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext15                text15       000000
__Ltext16                text16       000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        0000B0
__S2                     (abs)        000000
___aldiv                 text6        00072C
___aldiv@counter         cstackCOMRAM 000018
___aldiv@dividend        cstackCOMRAM 00000F
___aldiv@divisor         cstackCOMRAM 000013
___aldiv@quotient        cstackCOMRAM 00001A
___aldiv@sign            cstackCOMRAM 000019
___almod                 text5        000834
___almod@counter         cstackCOMRAM 000018
___almod@dividend        cstackCOMRAM 00000F
___almod@divisor         cstackCOMRAM 000013
___almod@sign            cstackCOMRAM 000019
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___lldiv                 text9        00091C
___lldiv@counter         cstackCOMRAM 00002D
___lldiv@dividend        cstackCOMRAM 000020
___lldiv@divisor         cstackCOMRAM 000024
___lldiv@quotient        cstackCOMRAM 000029
___lmul                  text4        000A24
___lmul@multiplicand     cstackCOMRAM 000018
___lmul@multiplier       cstackCOMRAM 000014
___lmul@product          cstackCOMRAM 00001C
___sp                    stack        000000
__accesstop              (abs)        000060
__activetblptr           (abs)        000002
__end_of___aldiv         text6        000834
__end_of___almod         text5        00091C
__end_of___lldiv         text9        0009A2
__end_of___lmul          text4        000A7A
__end_of__initialization cinit        000BAC
__end_of__stringdata     smallconst   000115
__end_of_ad_init         text16       000B98
__end_of_ad_read         text15       000B56
__end_of_general_init    text14       000BE8
__end_of_isr             intcode      0000C8
__end_of_main            text0        0005EE
__end_of_pwm_deinit      text13       000BF6
__end_of_pwm_init        text12       000B0A
__end_of_pwm_set         text11       000B78
__end_of_uart_get        text10       000B30
__end_of_uart_init       text8        000A24
__end_of_uart_inwaiting  text7        000BD2
__end_of_uart_put        text3        000AB8
__end_of_uart_put_int    text2        00072C
__end_of_uart_puts       text1        000AE2
__initialization         cinit        000B98
__mediumconst            mediumconst  000000
__pbssBANK0              bssBANK0     000060
__pbssCOMRAM             bssCOMRAM    000043
__pcinit                 cinit        000B98
__pcstackBANK0           cstackBANK0  0000A0
__pcstackCOMRAM          cstackCOMRAM 000001
__pintcode               intcode      000008
__psmallconst            smallconst   000100
__ptext0                 text0        000116
__ptext1                 text1        000AB8
__ptext10                text10       000B0A
__ptext11                text11       000B56
__ptext12                text12       000AE2
__ptext13                text13       000BE8
__ptext14                text14       000BD2
__ptext15                text15       000B30
__ptext16                text16       000B78
__ptext2                 text2        0005EE
__ptext3                 text3        000A7A
__ptext4                 text4        000A24
__ptext5                 text5        000834
__ptext6                 text6        00072C
__ptext7                 text7        000BB6
__ptext8                 text8        0009A2
__ptext9                 text9        00091C
__ramtop                 ramtop       000100
__size_of___aldiv        (abs)        000000
__size_of___almod        (abs)        000000
__size_of___lldiv        (abs)        000000
__size_of___lmul         (abs)        000000
__size_of_ad_init        (abs)        000000
__size_of_ad_read        (abs)        000000
__size_of_general_init   (abs)        000000
__size_of_isr            (abs)        000000
__size_of_main           (abs)        000000
__size_of_pwm_deinit     (abs)        000000
__size_of_pwm_init       (abs)        000000
__size_of_pwm_set        (abs)        000000
__size_of_uart_get       (abs)        000000
__size_of_uart_init      (abs)        000000
__size_of_uart_inwaiting (abs)        000000
__size_of_uart_put       (abs)        000000
__size_of_uart_put_int   (abs)        000000
__size_of_uart_puts      (abs)        000000
__smallconst             smallconst   000100
__stringdata             smallconst   000101
_ad_init                 text16       000B78
_ad_read                 text15       000B30
_general_init            text14       000BD2
_isr                     intcode      000008
_main                    text0        000116
_pwm_deinit              text13       000BE8
_pwm_init                text12       000AE2
_pwm_set                 text11       000B56
_rxbuffer                bssBANK0     000060
_rxip                    bssCOMRAM    000043
_rxop                    bssCOMRAM    000044
_txbuffer                bssBANK0     000080
_txip                    bssCOMRAM    000045
_txop                    bssCOMRAM    000046
_uart_get                text10       000B0A
_uart_init               text8        0009A2
_uart_inwaiting          text7        000BB6
_uart_put                text3        000A7A
_uart_put_int            text2        0005EE
_uart_puts               text1        000AB8
ad_read@channel          cstackCOMRAM 000013
end_of_initialization    cinit        000BAC
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
main@bat_i_in            cstackBANK0  0000AA
main@bat_i_out           cstackBANK0  0000A2
main@bat_v               cstackBANK0  0000AD
main@bat_v_old           cstackBANK0  0000A4
main@duty_cycle          cstackBANK0  0000AF
main@j                   cstackBANK0  0000A6
main@mppt_state          cstackBANK0  0000AC
main@pv_i                cstackBANK0  0000A0
main@pv_v                cstackBANK0  0000A8
pwm_set@level            cstackCOMRAM 000010
stackhi                  (abs)        0000FF
stacklo                  (abs)        0000B0
start                    init         0000C8
start_initialization     cinit        000B98
uart_get@c               cstackCOMRAM 00000F
uart_init@baud           cstackCOMRAM 00002E
uart_init@spbrg_calc     cstackCOMRAM 000036
uart_put@c               cstackCOMRAM 00000F
uart_put_int@j           cstackCOMRAM 000036
uart_put_int@len         cstackCOMRAM 000037
uart_put_int@n           cstackCOMRAM 000020
uart_put_int@str         cstackCOMRAM 00002A
uart_puts@s              cstackCOMRAM 000010


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 22 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2   57[COMRAM] int 
  argv            3   59[COMRAM] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
  j               2    6[BANK0 ] unsigned int 
  bat_v           2   13[BANK0 ] unsigned int 
  bat_i_in        2   10[BANK0 ] unsigned int 
  pv_v            2    8[BANK0 ] unsigned int 
  bat_v_old       2    4[BANK0 ] unsigned int 
  bat_i_out       2    2[BANK0 ] unsigned int 
  pv_i            2    0[BANK0 ] unsigned int 
  duty_cycle      1   15[BANK0 ] unsigned char 
  mppt_state      1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   57[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         5       0
      Locals:         0      16
      Temps:          4       0
      Totals:         9      16
Total ram usage:       25 bytes
 Hardware stack levels required when called:    3
 This function calls:
		___lldiv
		___lmul
		_ad_init
		_ad_read
		_general_init
		_pwm_deinit
		_pwm_init
		_pwm_set
		_uart_get
		_uart_init
		_uart_inwaiting
		_uart_put_int
		_uart_puts
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_puts *****************
 Defined at:
		line 64 in file "uart.c"
 Parameters:    Size  Location     Type
  s               2   15[COMRAM] PTR const unsigned char 
		 -> STR_12(3), STR_11(4), STR_10(4), STR_9(5), 
		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         0       0
      Temps:          0       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_uart_put
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uart_put_int *****************
 Defined at:
		line 78 in file "uart.c"
 Parameters:    Size  Location     Type
  n               4   31[COMRAM] long 
 Auto vars:     Size  Location     Type
  str            12   41[COMRAM] unsigned char [12]
  len             1   54[COMRAM] unsigned char 
  j               1   53[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         4       0
      Locals:        14       0
      Temps:          6       0
      Totals:        24       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___aldiv
		___almod
		___lmul
		_uart_put
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uart_put *****************
 Defined at:
		line 50 in file "uart.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         1       0
      Temps:          0       0
      Totals:         1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_puts
		_uart_put_int
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lmul.c"
 Parameters:    Size  Location     Type
  multiplier      4   19[COMRAM] unsigned long 
  multiplicand    4   23[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   27[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  4   19[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         8       0
      Locals:         4       0
      Temps:          0       0
      Totals:        12       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_uart_put_int
 This function uses a non-reentrant model


 *************** function ___almod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\almod.c"
 Parameters:    Size  Location     Type
  dividend        4   14[COMRAM] long 
  divisor         4   18[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   24[COMRAM] unsigned char 
  counter         1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   14[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         8       0
      Locals:         2       0
      Temps:          1       0
      Totals:        11       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_put_int
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   14[COMRAM] long 
  divisor         4   18[COMRAM] long 
 Auto vars:     Size  Location     Type
  quotient        4   25[COMRAM] long 
  sign            1   24[COMRAM] unsigned char 
  counter         1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   14[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         8       0
      Locals:         6       0
      Temps:          1       0
      Totals:        15       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_put_int
 This function uses a non-reentrant model


 *************** function _uart_inwaiting *****************
 Defined at:
		line 32 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, prodl
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          1       0
      Totals:         1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 18 in file "uart.c"
 Parameters:    Size  Location     Type
  baud            4   45[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  spbrg_calc      4   53[COMRAM] unsigned long 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         4       0
      Locals:         4       0
      Temps:          4       0
      Totals:        12       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   31[COMRAM] unsigned long 
  divisor         4   35[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4   40[COMRAM] unsigned long 
  counter         1   44[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   31[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         8       0
      Locals:         5       0
      Temps:          1       0
      Totals:        14       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_uart_init
 This function uses a non-reentrant model


 *************** function _uart_get *****************
 Defined at:
		line 41 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c               1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         1       0
      Temps:          0       0
      Totals:         1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_set *****************
 Defined at:
		line 27 in file "perf.c"
 Parameters:    Size  Location     Type
  level           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  level           1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         1       0
      Temps:          1       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_init *****************
 Defined at:
		line 7 in file "perf.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_deinit *****************
 Defined at:
		line 22 in file "perf.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _general_init *****************
 Defined at:
		line 5 in file "platform.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ad_read *****************
 Defined at:
		line 45 in file "perf.c"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  channel         1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   14[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         1       0
      Temps:          2       0
      Totals:         5       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ad_init *****************
 Defined at:
		line 32 in file "perf.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 14 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:         14       0
      Totals:        14       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
uart.c
		_uart_init     		CODE           	09A2	0000	130
		_uart_get      		CODE           	0B0A	0000	38
		_isr           		CODE           	0008	0000	192
		_uart_put      		CODE           	0A7A	0000	62
		_uart_puts     		CODE           	0AB8	0000	42
		_uart_inwaiting		CODE           	0BB6	0000	28
		_uart_put_int  		CODE           	05EE	0000	318

uart.c estimated size: 810

shared
		__stringdata   		SMALLCONST     	0101	0000	20
		__initializatio		CODE           	0B98	0000	20

shared estimated size: 40

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\almod.c
		___almod       		CODE           	0834	0000	232

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\almod.c estimated size: 232

platform.c
		_general_init  		CODE           	0BD2	0000	22

platform.c estimated size: 22

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\aldiv.c
		___aldiv       		CODE           	072C	0000	264

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\aldiv.c estimated size: 264

main.c
		_main          		CODE           	0116	0000	1240

main.c estimated size: 1240

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c
		___lldiv       		CODE           	091C	0000	134

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c estimated size: 134

perf.c
		_pwm_set       		CODE           	0B56	0000	34
		_ad_init       		CODE           	0B78	0000	32
		_ad_read       		CODE           	0B30	0000	38
		_pwm_init      		CODE           	0AE2	0000	40
		_pwm_deinit    		CODE           	0BE8	0000	14

perf.c estimated size: 158

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lmul.c
		___lmul        		CODE           	0A24	0000	86

C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lmul.c estimated size: 86

